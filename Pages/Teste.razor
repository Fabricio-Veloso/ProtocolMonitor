@page "/teste"
@inherits LayoutComponentBase

@using System.Threading.Tasks
@using System.Text.Json
@using MyBlazorPwa

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<MudAppBar Fixed="true" Bottom="false" Color="Color.Primary">
    <MudText Typo="Typo.h6">WebRTC Data Channel Test</MudText>
</MudAppBar>

<div>
    <button @onclick="CreateConnection">Create Connection</button>
    <button @onclick="SendMessage">Send Message</button>
    <input @bind="messageToSend" placeholder="Type your message here..." />
</div>

<div>
    <h4>Received Messages:</h4>
    <ul>
        @foreach (var message in receivedMessages)
        {
            <li>@message</li>
        }
    </ul>
</div>

@code {
    private string messageToSend;
    private List<string> receivedMessages = new();

    private async Task CreateConnection()
    {
        await JSRuntime.InvokeVoidAsync("createConnection");
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrEmpty(messageToSend))
        {
            await JSRuntime.InvokeVoidAsync("sendMessage", messageToSend);
            messageToSend = string.Empty;
        }
    }

    // Corrigido: Adicionei o atributo [JSInvokable] aqui
    [JSInvokable("ReceiveMessage")]
    public void ReceiveMessage(string message)
    {
        receivedMessages.Add(message);
        InvokeAsync(StateHasChanged);
    }
}
